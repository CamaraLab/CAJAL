
# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_windows_mac:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
    - name: Install dependencies
      run: |
        python -m pip install wheel
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov
        python -m pip install cibuildwheel==2.20.0
        pip install -r requirements.txt
    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
       CIBW_SKIP: pp39-manylinux_aarch64

    - uses: actions/upload-artifact@v4
      with: 
        name: cibw-wheels-${{ matrix.platform }}-${{ strategy.job-index }}
        path: ./wheelhouse/*.whl

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install wheel
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov
        pip install -r requirements.txt
    - name: Install CAJAL
      run: |
        python -m pip install .[vis]
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest --cov src/ tests/
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
