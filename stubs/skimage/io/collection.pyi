from _typeshed import Incomplete

def concatenate_images(ic): ...

class ImageCollection:
    load_func: Incomplete
    load_func_kwargs: Incomplete
    data: Incomplete
    def __init__(self, load_pattern, conserve_memory: bool = ..., load_func: Incomplete | None = ..., **load_func_kwargs) -> None: ...
    @property
    def files(self): ...
    @property
    def conserve_memory(self): ...
    def __getitem__(self, n): ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def reload(self, n: Incomplete | None = ...) -> None: ...
    def concatenate(self): ...

def imread_collection_wrapper(imread): ...

class MultiImage(ImageCollection):
    def __init__(self, filename, conserve_memory: bool = ..., dtype: Incomplete | None = ..., **imread_kwargs) -> None: ...
    @property
    def filename(self): ...
