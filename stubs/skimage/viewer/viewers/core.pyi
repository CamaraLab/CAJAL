from ..qt import QtWidgets
from _typeshed import Incomplete

class ImageViewer(QtWidgets.QMainWindow):
    dock_areas: Incomplete
    original_image_changed: Incomplete
    file_menu: Incomplete
    main_widget: Incomplete
    canvas: Incomplete
    useblit: Incomplete
    plugins: Incomplete
    layout: Incomplete
    status_message: Incomplete
    def __init__(self, image, useblit: bool = ...) -> None: ...
    def __add__(self, plugin): ...
    def open_file(self, filename: Incomplete | None = ...) -> None: ...
    def update_image(self, image) -> None: ...
    def save_to_file(self, filename: Incomplete | None = ...) -> None: ...
    def closeEvent(self, event) -> None: ...
    def show(self, main_window: bool = ...): ...
    def redraw(self) -> None: ...
    @property
    def image(self): ...
    @image.setter
    def image(self, image) -> None: ...
    def reset_image(self) -> None: ...
    def connect_event(self, event, callback): ...
    def disconnect_event(self, callback_id) -> None: ...
    def add_tool(self, tool) -> None: ...
    def remove_tool(self, tool) -> None: ...

class CollectionViewer(ImageViewer):
    image_collection: Incomplete
    index: int
    num_images: Incomplete
    slider: Incomplete
    def __init__(self, image_collection, update_on: str = ..., **kwargs) -> None: ...
    def update_index(self, name, index) -> None: ...
    def keyPressEvent(self, event) -> None: ...
