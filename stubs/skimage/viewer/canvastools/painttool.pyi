from ...viewer.canvastools.base import CanvasToolBase
from _typeshed import Incomplete

class PaintTool(CanvasToolBase):
    alpha: Incomplete
    cmap: Incomplete
    artists: Incomplete
    def __init__(self, manager, overlay_shape, radius: int = ..., alpha: float = ..., on_move: Incomplete | None = ..., on_release: Incomplete | None = ..., on_enter: Incomplete | None = ..., rect_props: Incomplete | None = ...) -> None: ...
    @property
    def label(self): ...
    @label.setter
    def label(self, value) -> None: ...
    @property
    def radius(self): ...
    window: Incomplete
    @radius.setter
    def radius(self, r) -> None: ...
    @property
    def overlay(self): ...
    @overlay.setter
    def overlay(self, image) -> None: ...
    @property
    def shape(self): ...
    @shape.setter
    def shape(self, shape) -> None: ...
    def on_key_press(self, event) -> None: ...
    def on_mouse_press(self, event) -> None: ...
    def on_mouse_release(self, event) -> None: ...
    def on_move(self, event) -> None: ...
    def update_overlay(self, x, y) -> None: ...
    def update_cursor(self, x, y) -> None: ...
    @property
    def geometry(self): ...

class CenteredWindow:
    radius: Incomplete
    array_shape: Incomplete
    def __init__(self, radius, array_shape) -> None: ...
    def at(self, row, col): ...
