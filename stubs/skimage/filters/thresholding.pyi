from _typeshed import Incomplete

def try_all_threshold(image, figsize=..., verbose: bool = ...): ...
def threshold_local(image, block_size: int = ..., method: str = ..., offset: int = ..., mode: str = ..., param: Incomplete | None = ..., cval: int = ...): ...
def threshold_otsu(image: Incomplete | None = ..., nbins: int = ..., *, hist: Incomplete | None = ...): ...
def threshold_yen(image: Incomplete | None = ..., nbins: int = ..., *, hist: Incomplete | None = ...): ...
def threshold_isodata(image: Incomplete | None = ..., nbins: int = ..., return_all: bool = ..., *, hist: Incomplete | None = ...): ...
def threshold_li(image, *, tolerance: Incomplete | None = ..., initial_guess: Incomplete | None = ..., iter_callback: Incomplete | None = ...): ...
def threshold_minimum(image: Incomplete | None = ..., nbins: int = ..., max_num_iter: int = ..., *, hist: Incomplete | None = ...): ...
def threshold_mean(image): ...
def threshold_triangle(image, nbins: int = ...): ...
def threshold_niblack(image, window_size: int = ..., k: float = ...): ...
def threshold_sauvola(image, window_size: int = ..., k: float = ..., r: Incomplete | None = ...): ...
def apply_hysteresis_threshold(image, low, high): ...
def threshold_multiotsu(image: Incomplete | None = ..., classes: int = ..., nbins: int = ..., *, hist: Incomplete | None = ...): ...
