from _typeshed import Incomplete

def map_array(input_arr, input_vals, output_vals, out: Incomplete | None = ...): ...

class ArrayMap:
    in_values: Incomplete
    out_values: Incomplete
    def __init__(self, in_values, out_values) -> None: ...
    def __len__(self) -> int: ...
    def __array__(self, dtype: Incomplete | None = ...): ...
    @property
    def dtype(self): ...
    def __call__(self, arr): ...
    def __getitem__(self, index): ...
    def __setitem__(self, indices, values) -> None: ...
