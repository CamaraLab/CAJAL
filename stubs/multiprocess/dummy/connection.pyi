from _typeshed import Incomplete

class Listener:
    def __init__(self, address: Incomplete | None = ..., family: Incomplete | None = ..., backlog: int = ...) -> None: ...
    def accept(self): ...
    def close(self) -> None: ...
    @property
    def address(self): ...
    def __enter__(self): ...
    def __exit__(self, exc_type, exc_value, exc_tb) -> None: ...

def Client(address): ...
def Pipe(duplex: bool = ...): ...

class Connection:
    send: Incomplete
    recv: Incomplete
    def __init__(self, _in, _out) -> None: ...
    def poll(self, timeout: float = ...): ...
    def close(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, exc_type, exc_value, exc_tb) -> None: ...
