from _typeshed import Incomplete

class SharedMemory:
    def __init__(self, name: Incomplete | None = ..., create: bool = ..., size: int = ...) -> None: ...
    def __del__(self) -> None: ...
    def __reduce__(self): ...
    @property
    def buf(self): ...
    @property
    def name(self): ...
    @property
    def size(self): ...
    def close(self) -> None: ...
    def unlink(self) -> None: ...

class ShareableList:
    shm: Incomplete
    def __init__(self, sequence: Incomplete | None = ..., *, name: Incomplete | None = ...) -> None: ...
    def __getitem__(self, position): ...
    def __setitem__(self, position, value) -> None: ...
    def __reduce__(self): ...
    def __len__(self) -> int: ...
    @property
    def format(self): ...
    def count(self, value): ...
    def index(self, value): ...
    __class_getitem__: Incomplete
