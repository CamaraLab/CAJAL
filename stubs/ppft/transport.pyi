import hashlib
from _typeshed import Incomplete

sha_new = hashlib.sha1
md5_new = hashlib.md5
copyright: Incomplete
version: Incomplete

class Transport:
    def send(self, msg) -> None: ...
    def receive(self, preprocess: Incomplete | None = ...) -> None: ...
    def authenticate(self, secret): ...
    def close(self) -> None: ...

class CTransport(Transport):
    rcache: Incomplete
    def hash(self, msg): ...
    def csend(self, msg) -> None: ...
    def creceive(self, preprocess: Incomplete | None = ...): ...

class PipeTransport(Transport):
    scache: Incomplete
    exiting: bool
    r: Incomplete
    w: Incomplete
    wb: Incomplete
    has_wb: bool
    rb: Incomplete
    has_rb: bool
    def __init__(self, r, w) -> None: ...
    def send(self, msg) -> None: ...
    def receive(self, preprocess: Incomplete | None = ...): ...
    def close(self) -> None: ...

class SocketTransport(Transport):
    socket: Incomplete
    scache: Incomplete
    def __init__(self, socket1, socket_timeout) -> None: ...
    def send(self, data) -> None: ...
    def receive(self, preprocess: Incomplete | None = ...): ...
    def close(self) -> None: ...

class CPipeTransport(PipeTransport, CTransport): ...
class CSocketTransport(SocketTransport, CTransport): ...
