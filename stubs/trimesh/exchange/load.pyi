from . import misc as misc
from .. import resolvers as resolvers, util as util
from ..base import Trimesh as Trimesh
from ..constants import log as log, log_time as log_time
from ..exceptions import closure as closure
from ..parent import Geometry as Geometry
from ..path.exchange.load import load_path as load_path, path_formats as path_formats
from ..points import PointCloud as PointCloud
from ..scene.scene import Scene as Scene, append_scenes as append_scenes
from _typeshed import Incomplete

def mesh_formats(): ...
def available_formats(): ...
def load(file_obj, file_type: Incomplete | None = ..., resolver: Incomplete | None = ..., force: Incomplete | None = ..., **kwargs): ...
def load_mesh(file_obj, file_type: Incomplete | None = ..., resolver: Incomplete | None = ..., **kwargs): ...
def load_compressed(file_obj, file_type: Incomplete | None = ..., resolver: Incomplete | None = ..., mixed: bool = ..., **kwargs): ...
def load_remote(url, **kwargs): ...
def load_kwargs(*args, **kwargs): ...
def parse_file_args(file_obj, file_type, resolver: Incomplete | None = ..., **kwargs): ...

compressed_loaders: Incomplete
mesh_loaders: Incomplete
voxel_loaders: Incomplete
