import pyglet
from .. import rendering as rendering, util as util
from ..transformations import translation_matrix as translation_matrix
from ..visual import to_rgba as to_rgba
from .trackball import Trackball as Trackball
from _typeshed import Incomplete

class SceneViewer(pyglet.window.Window):
    scene: Incomplete
    callback: Incomplete
    callback_period: Incomplete
    offset_lines: Incomplete
    background: Incomplete
    batch: Incomplete
    Profiler: Incomplete
    kwargs: Incomplete
    vertex_list: Incomplete
    vertex_list_hash: Incomplete
    vertex_list_mode: Incomplete
    fixed: Incomplete
    textures: Incomplete
    line_settings: Incomplete
    def __init__(self, scene, smooth: bool = ..., flags: Incomplete | None = ..., visible: bool = ..., resolution: Incomplete | None = ..., start_loop: bool = ..., callback: Incomplete | None = ..., callback_period: Incomplete | None = ..., caption: Incomplete | None = ..., fixed: Incomplete | None = ..., offset_lines: bool = ..., line_settings: Incomplete | None = ..., background: Incomplete | None = ..., window_conf: Incomplete | None = ..., profile: bool = ..., record: bool = ..., **kwargs) -> None: ...
    def add_geometry(self, name, geometry, **kwargs) -> None: ...
    def cleanup_geometries(self) -> None: ...
    def unhide_geometry(self, node) -> None: ...
    def hide_geometry(self, node) -> None: ...
    view: Incomplete
    def reset_view(self, flags: Incomplete | None = ...) -> None: ...
    def init_gl(self) -> None: ...
    def toggle_culling(self) -> None: ...
    def toggle_wireframe(self) -> None: ...
    def toggle_fullscreen(self) -> None: ...
    def toggle_axis(self) -> None: ...
    def toggle_grid(self) -> None: ...
    def update_flags(self) -> None: ...
    def on_resize(self, width, height) -> None: ...
    def on_mouse_press(self, x, y, buttons, modifiers) -> None: ...
    def on_mouse_drag(self, x, y, dx, dy, buttons, modifiers) -> None: ...
    def on_mouse_scroll(self, x, y, dx, dy) -> None: ...
    def on_key_press(self, symbol, modifiers) -> None: ...
    def on_draw(self) -> None: ...
    def flip(self) -> None: ...
    def save_image(self, file_obj): ...

def geometry_hash(geometry): ...
def render_scene(scene, resolution: Incomplete | None = ..., visible: bool = ..., **kwargs): ...
