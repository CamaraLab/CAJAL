from _typeshed import Incomplete
from scipy._lib._disjoint_set import DisjointSet as DisjointSet

class ClusterWarning(UserWarning): ...

def single(y): ...
def complete(y): ...
def average(y): ...
def weighted(y): ...
def centroid(y): ...
def median(y): ...
def ward(y): ...
def linkage(y, method: str = ..., metric: str = ..., optimal_ordering: bool = ...): ...

class ClusterNode:
    id: Incomplete
    left: Incomplete
    right: Incomplete
    dist: Incomplete
    count: Incomplete
    def __init__(self, id, left: Incomplete | None = ..., right: Incomplete | None = ..., dist: int = ..., count: int = ...) -> None: ...
    def __lt__(self, node): ...
    def __gt__(self, node): ...
    def __eq__(self, node): ...
    def get_id(self): ...
    def get_count(self): ...
    def get_left(self): ...
    def get_right(self): ...
    def is_leaf(self): ...
    def pre_order(self, func=...): ...

def cut_tree(Z, n_clusters: Incomplete | None = ..., height: Incomplete | None = ...): ...
def to_tree(Z, rd: bool = ...): ...
def optimal_leaf_ordering(Z, y, metric: str = ...): ...
def cophenet(Z, Y: Incomplete | None = ...): ...
def inconsistent(Z, d: int = ...): ...
def from_mlab_linkage(Z): ...
def to_mlab_linkage(Z): ...
def is_monotonic(Z): ...
def is_valid_im(R, warning: bool = ..., throw: bool = ..., name: Incomplete | None = ...): ...
def is_valid_linkage(Z, warning: bool = ..., throw: bool = ..., name: Incomplete | None = ...): ...
def num_obs_linkage(Z): ...
def correspond(Z, Y): ...
def fcluster(Z, t, criterion: str = ..., depth: int = ..., R: Incomplete | None = ..., monocrit: Incomplete | None = ...): ...
def fclusterdata(X, t, criterion: str = ..., metric: str = ..., depth: int = ..., method: str = ..., R: Incomplete | None = ...): ...
def leaves_list(Z): ...
def set_link_color_palette(palette) -> None: ...
def dendrogram(Z, p: int = ..., truncate_mode: Incomplete | None = ..., color_threshold: Incomplete | None = ..., get_leaves: bool = ..., orientation: str = ..., labels: Incomplete | None = ..., count_sort: bool = ..., distance_sort: bool = ..., show_leaf_counts: bool = ..., no_plot: bool = ..., no_labels: bool = ..., leaf_font_size: Incomplete | None = ..., leaf_rotation: Incomplete | None = ..., leaf_label_func: Incomplete | None = ..., show_contracted: bool = ..., link_color_func: Incomplete | None = ..., ax: Incomplete | None = ..., above_threshold_color: str = ...): ...
def is_isomorphic(T1, T2): ...
def maxdists(Z): ...
def maxinconsts(Z, R): ...
def maxRstat(Z, R, i): ...
def leaders(Z, T): ...
