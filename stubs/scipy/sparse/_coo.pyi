from ._base import sparray
from ._data import _data_matrix, _minmax_mixin
from ._matrix import spmatrix
from _typeshed import Incomplete

class _coo_base(_data_matrix, _minmax_mixin):
    row: Incomplete
    col: Incomplete
    data: Incomplete
    has_canonical_format: bool
    def __init__(self, arg1, shape: Incomplete | None = ..., dtype: Incomplete | None = ..., copy: bool = ...) -> None: ...
    def reshape(self, *args, **kwargs): ...
    def transpose(self, axes: Incomplete | None = ..., copy: bool = ...): ...
    def resize(self, *shape) -> None: ...
    def toarray(self, order: Incomplete | None = ..., out: Incomplete | None = ...): ...
    def tocsc(self, copy: bool = ...): ...
    def tocsr(self, copy: bool = ...): ...
    def tocoo(self, copy: bool = ...): ...
    def todia(self, copy: bool = ...): ...
    def todok(self, copy: bool = ...): ...
    def diagonal(self, k: int = ...): ...
    def sum_duplicates(self) -> None: ...
    def eliminate_zeros(self) -> None: ...

def isspmatrix_coo(x): ...

class coo_array(_coo_base, sparray): ...
class coo_matrix(spmatrix, _coo_base): ...
