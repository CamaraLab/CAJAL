from ._base import _spbase, sparray
from ._index import IndexMixin
from ._matrix import spmatrix
from _typeshed import Incomplete

class _dok_base(_spbase, IndexMixin, dict):
    dtype: Incomplete
    def __init__(self, arg1, shape: Incomplete | None = ..., dtype: Incomplete | None = ..., copy: bool = ...) -> None: ...
    def update(self, val) -> None: ...
    def count_nonzero(self): ...
    def __len__(self) -> int: ...
    def get(self, key, default: float = ...): ...
    def __add__(self, other): ...
    def __radd__(self, other): ...
    def __neg__(self): ...
    def __imul__(self, other): ...
    def __truediv__(self, other): ...
    def __itruediv__(self, other): ...
    def __reduce__(self): ...
    def transpose(self, axes: Incomplete | None = ..., copy: bool = ...): ...
    def conjtransp(self): ...
    def copy(self): ...
    def tocoo(self, copy: bool = ...): ...
    def todok(self, copy: bool = ...): ...
    def tocsc(self, copy: bool = ...): ...
    def resize(self, *shape) -> None: ...

def isspmatrix_dok(x): ...

class dok_array(_dok_base, sparray): ...

class dok_matrix(spmatrix, _dok_base):
    __dict__: Incomplete
    def set_shape(self, shape) -> None: ...
    def get_shape(self): ...
    shape: Incomplete
