from _typeshed import Incomplete
from collections.abc import Generator
from scipy._lib.decorator import decorator as decorator
from scipy.sparse import SparseEfficiencyWarning as SparseEfficiencyWarning, bsr_matrix as bsr_matrix, coo_matrix as coo_matrix, csc_matrix as csc_matrix, csr_matrix as csr_matrix, dia_matrix as dia_matrix, dok_matrix as dok_matrix, eye as eye, issparse as issparse, lil_matrix as lil_matrix
from scipy.sparse._sputils import asmatrix as asmatrix, get_index_dtype as get_index_dtype, isscalarlike as isscalarlike, matrix as matrix, supported_dtypes as supported_dtypes
from scipy.sparse.linalg import expm as expm, inv as inv, splu as splu

IS_COLAB: Incomplete

def assert_in(member, collection, msg: Incomplete | None = ...) -> None: ...
def assert_array_equal_dtype(x, y, **kwargs) -> None: ...

NON_ARRAY_BACKED_FORMATS: Incomplete

def sparse_may_share_memory(A, B): ...

sup_complex: Incomplete

def with_64bit_maxval_limit(maxval_limit: Incomplete | None = ..., random: bool = ..., fixed_dtype: Incomplete | None = ..., downcast_maxval: Incomplete | None = ..., assert_32bit: bool = ...): ...
def toarray(a): ...

class BinopTester:
    def __add__(self, mat): ...
    def __mul__(self, mat): ...
    def __sub__(self, mat): ...
    def __radd__(self, mat): ...
    def __rmul__(self, mat): ...
    def __rsub__(self, mat): ...
    def __matmul__(self, mat): ...
    def __rmatmul__(self, mat): ...

class BinopTester_with_shape:
    def __init__(self, shape) -> None: ...
    def shape(self): ...
    def ndim(self): ...
    def __add__(self, mat): ...
    def __mul__(self, mat): ...
    def __sub__(self, mat): ...
    def __radd__(self, mat): ...
    def __rmul__(self, mat): ...
    def __rsub__(self, mat): ...
    def __matmul__(self, mat): ...
    def __rmatmul__(self, mat): ...

class _TestCommon:
    math_dtypes: Incomplete
    @classmethod
    def init_class(cls) -> None: ...
    def test_bool(self) -> None: ...
    def test_bool_rollover(self) -> None: ...
    def test_eq(self) -> None: ...
    def test_ne(self) -> None: ...
    def test_lt(self) -> None: ...
    def test_gt(self) -> None: ...
    def test_le(self) -> None: ...
    def test_ge(self) -> None: ...
    def test_empty(self) -> None: ...
    def test_count_nonzero(self) -> None: ...
    def test_invalid_shapes(self) -> None: ...
    def test_repr(self) -> None: ...
    def test_str(self) -> None: ...
    def test_empty_arithmetic(self) -> None: ...
    def test_abs(self) -> None: ...
    def test_round(self) -> None: ...
    def test_elementwise_power(self) -> None: ...
    def test_neg(self) -> None: ...
    def test_real(self) -> None: ...
    def test_imag(self) -> None: ...
    def test_diagonal(self) -> None: ...
    def test_trace(self) -> None: ...
    def test_reshape(self) -> None: ...
    def test_setdiag_comprehensive(self) -> None: ...
    def test_setdiag(self) -> None: ...
    def test_nonzero(self) -> None: ...
    def test_numpy_nonzero(self) -> None: ...
    def test_getrow(self) -> None: ...
    def test_getcol(self) -> None: ...
    def test_sum(self) -> None: ...
    def test_sum_invalid_params(self) -> None: ...
    def test_sum_dtype(self) -> None: ...
    def test_sum_out(self) -> None: ...
    def test_numpy_sum(self) -> None: ...
    def test_mean(self) -> None: ...
    def test_mean_invalid_params(self) -> None: ...
    def test_mean_dtype(self) -> None: ...
    def test_mean_out(self) -> None: ...
    def test_numpy_mean(self) -> None: ...
    def test_expm(self) -> None: ...
    def test_inv(self) -> None: ...
    def test_from_array(self) -> None: ...
    def test_from_matrix(self) -> None: ...
    def test_from_list(self) -> None: ...
    def test_from_sparse(self) -> None: ...
    def test_todense(self) -> None: ...
    def test_toarray(self) -> None: ...
    def test_astype(self) -> None: ...
    def test_astype_immutable(self) -> None: ...
    def test_asfptype(self) -> None: ...
    def test_mul_scalar(self) -> None: ...
    def test_rmul_scalar(self) -> None: ...
    def test_rmul_scalar_type_error(self) -> None: ...
    def test_add(self) -> None: ...
    def test_radd(self) -> None: ...
    def test_sub(self) -> None: ...
    def test_rsub(self) -> None: ...
    def test_add0(self) -> None: ...
    def test_elementwise_multiply(self) -> None: ...
    def test_elementwise_multiply_broadcast(self) -> None: ...
    def test_elementwise_divide(self) -> None: ...
    def test_pow(self) -> None: ...
    def test_rmatvec(self) -> None: ...
    def test_small_multiplication(self) -> None: ...
    def test_start_vs_at_sign_for_sparray_and_spmatrix(self) -> None: ...
    def test_binop_custom_type(self) -> None: ...
    def test_binop_custom_type_with_shape(self) -> None: ...
    def test_dot_scalar(self) -> None: ...
    def test_matmul(self) -> None: ...
    def test_matvec(self) -> None: ...
    def test_matmat_sparse(self) -> None: ...
    def test_matmat_dense(self) -> None: ...
    def test_sparse_format_conversions(self) -> None: ...
    def test_tobsr(self) -> None: ...
    def test_transpose(self) -> None: ...
    def test_add_dense(self) -> None: ...
    def test_sub_dense(self) -> None: ...
    def test_maximum_minimum(self) -> None: ...
    def test_copy(self) -> None: ...
    def test_iterator(self) -> None: ...
    def test_size_zero_matrix_arithmetic(self) -> None: ...
    def test_size_zero_conversions(self) -> None: ...
    def test_pickle(self) -> None: ...
    def test_unary_ufunc_overrides(self) -> None: ...
    def test_resize(self) -> None: ...
    def test_constructor1_base(self) -> None: ...

class _TestInplaceArithmetic:
    def test_inplace_dense(self) -> None: ...
    def test_imul_scalar(self) -> None: ...
    def test_idiv_scalar(self) -> None: ...
    def test_inplace_success(self) -> None: ...

class _TestGetSet:
    def test_getelement(self) -> None: ...
    def test_setelement(self) -> None: ...
    def test_negative_index_assignment(self) -> None: ...
    def test_scalar_assign_2(self) -> None: ...
    def test_index_scalar_assign(self) -> None: ...

class _TestSolve:
    def test_solve(self) -> None: ...

class _TestSlicing:
    def test_dtype_preservation(self) -> None: ...
    def test_dtype_preservation_empty_slice(self) -> None: ...
    def test_get_horiz_slice(self) -> None: ...
    def test_get_vert_slice(self) -> None: ...
    def test_get_slices(self) -> None: ...
    def test_non_unit_stride_2d_indexing(self) -> None: ...
    def test_slicing_2(self) -> None: ...
    def test_slicing_3(self) -> None: ...
    def test_ellipsis_slicing(self) -> None: ...
    def test_multiple_ellipsis_slicing(self) -> None: ...

class _TestSlicingAssign:
    def test_slice_scalar_assign(self) -> None: ...
    def test_slice_assign_2(self) -> None: ...
    def test_self_self_assignment(self) -> None: ...
    def test_slice_assignment(self) -> None: ...
    def test_sparsity_modifying_assignment(self) -> None: ...
    def test_set_slice(self) -> None: ...
    def test_assign_empty(self) -> None: ...
    def test_assign_1d_slice(self) -> None: ...

class _TestFancyIndexing:
    def test_dtype_preservation_empty_index(self) -> None: ...
    def test_bad_index(self) -> None: ...
    def test_fancy_indexing(self) -> None: ...
    def test_fancy_indexing_randomized(self) -> None: ...
    def test_fancy_indexing_boolean(self) -> None: ...
    def test_fancy_indexing_sparse_boolean(self) -> None: ...
    def test_fancy_indexing_regression_3087(self) -> None: ...
    def test_fancy_indexing_seq_assign(self) -> None: ...
    def test_fancy_indexing_2d_assign(self) -> None: ...
    def test_fancy_indexing_empty(self) -> None: ...

def check_remains_sorted(X) -> Generator[None, None, None]: ...

class _TestFancyIndexingAssign:
    def test_bad_index_assign(self) -> None: ...
    def test_fancy_indexing_set(self) -> None: ...
    def test_fancy_assignment_dtypes(self) -> None: ...
    def test_sequence_assignment(self) -> None: ...
    def test_fancy_assign_empty(self) -> None: ...

class _TestFancyMultidim:
    def test_fancy_indexing_ndarray(self) -> None: ...

class _TestFancyMultidimAssign:
    def test_fancy_assign_ndarray(self) -> None: ...
    def test_fancy_indexing_multidim_set(self) -> None: ...
    def test_fancy_assign_list(self) -> None: ...
    def test_fancy_assign_slice(self) -> None: ...

class _TestArithmetic:
    def test_add_sub(self) -> None: ...
    def test_mu(self) -> None: ...

class _TestMinMax:
    def test_minmax(self) -> None: ...
    def test_minmax_axis(self) -> None: ...
    def test_nanminmax(self) -> None: ...
    def test_minmax_invalid_params(self) -> None: ...
    def test_numpy_minmax(self) -> None: ...
    def test_argmax(self) -> None: ...

class _TestGetNnzAxis:
    def test_getnnz_axis(self) -> None: ...

def sparse_test_class(getset: bool = ..., slicing: bool = ..., slicing_assign: bool = ..., fancy_indexing: bool = ..., fancy_assign: bool = ..., fancy_multidim_indexing: bool = ..., fancy_multidim_assign: bool = ..., minmax: bool = ..., nnz_axis: bool = ...): ...

class TestCSR:
    @classmethod
    def spcreator(cls, *args, **kwargs): ...
    math_dtypes: Incomplete
    def test_constructor1(self) -> None: ...
    def test_constructor2(self) -> None: ...
    def test_constructor3(self) -> None: ...
    def test_constructor4(self) -> None: ...
    def test_constructor5(self) -> None: ...
    def test_constructor6(self) -> None: ...
    def test_constructor_smallcol(self) -> None: ...
    def test_constructor_largecol(self) -> None: ...
    def test_sort_indices(self) -> None: ...
    def test_eliminate_zeros(self) -> None: ...
    def test_ufuncs(self) -> None: ...
    def test_unsorted_arithmetic(self) -> None: ...
    def test_fancy_indexing_broadcast(self) -> None: ...
    def test_has_sorted_indices(self) -> None: ...
    def test_has_canonical_format(self) -> None: ...
    def test_scalar_idx_dtype(self) -> None: ...
    def test_binop_explicit_zeros(self) -> None: ...

class TestCSC:
    @classmethod
    def spcreator(cls, *args, **kwargs): ...
    math_dtypes: Incomplete
    def test_constructor1(self) -> None: ...
    def test_constructor2(self) -> None: ...
    def test_constructor3(self) -> None: ...
    def test_constructor4(self) -> None: ...
    def test_constructor5(self) -> None: ...
    def test_constructor6(self) -> None: ...
    def test_eliminate_zeros(self) -> None: ...
    def test_sort_indices(self) -> None: ...
    def test_ufuncs(self) -> None: ...
    def test_unsorted_arithmetic(self) -> None: ...
    def test_fancy_indexing_broadcast(self) -> None: ...
    def test_scalar_idx_dtype(self) -> None: ...

class TestDOK:
    spcreator: Incomplete
    math_dtypes: Incomplete
    def test_mult(self) -> None: ...
    def test_add_nonzero(self) -> None: ...
    def test_dok_divide_scalar(self) -> None: ...
    def test_convert(self) -> None: ...
    def test_ctor(self) -> None: ...
    def test_ticket1160(self) -> None: ...

class TestLIL:
    spcreator: Incomplete
    math_dtypes: Incomplete
    def test_dot(self) -> None: ...
    def test_scalar_mul(self) -> None: ...
    def test_inplace_ops(self) -> None: ...
    def test_lil_iteration(self) -> None: ...
    def test_lil_from_csr(self) -> None: ...
    def test_fancy_indexing_lil(self) -> None: ...
    def test_point_wise_multiply(self) -> None: ...
    def test_lil_multiply_removal(self) -> None: ...

class TestCOO:
    spcreator: Incomplete
    math_dtypes: Incomplete
    def test_constructor1(self) -> None: ...
    def test_constructor2(self) -> None: ...
    def test_constructor3(self) -> None: ...
    def test_constructor4(self) -> None: ...
    def test_constructor_data_ij_dtypeNone(self) -> None: ...
    def test_iterator(self) -> None: ...
    def test_todia_all_zeros(self) -> None: ...
    def test_sum_duplicates(self) -> None: ...
    def test_todok_duplicates(self) -> None: ...
    def test_eliminate_zeros(self) -> None: ...
    def test_reshape_copy(self) -> None: ...
    def test_large_dimensions_reshape(self) -> None: ...

class TestDIA:
    spcreator: Incomplete
    math_dtypes: Incomplete
    def test_constructor1(self) -> None: ...
    def test_iterator(self) -> None: ...
    def test_setdiag_dtype(self) -> None: ...
    def test_getnnz_axis(self) -> None: ...
    def test_convert_gh14555(self) -> None: ...
    def test_tocoo_gh10050(self) -> None: ...

class TestBSR:
    spcreator: Incomplete
    math_dtypes: Incomplete
    def test_constructor1(self) -> None: ...
    def test_constructor2(self) -> None: ...
    def test_constructor3(self) -> None: ...
    def test_constructor4(self) -> None: ...
    def test_constructor5(self) -> None: ...
    def test_default_dtype(self) -> None: ...
    def test_bsr_tocsr(self) -> None: ...
    def test_eliminate_zeros(self) -> None: ...
    def test_eliminate_zeros_all_zero(self) -> None: ...
    def test_bsr_matvec(self) -> None: ...
    def test_bsr_matvecs(self) -> None: ...
    def test_iterator(self) -> None: ...
    def test_setdiag(self) -> None: ...
    def test_resize_blocked(self) -> None: ...
    def test_setdiag_comprehensive(self) -> None: ...
    def test_scalar_idx_dtype(self) -> None: ...

class _NonCanonicalMixin:
    def spcreator(self, D, sorted_indices: bool = ..., **kwargs): ...
    def test_bool(self) -> None: ...
    def test_getnnz_axis(self) -> None: ...
    def test_empty(self) -> None: ...

class _NonCanonicalCompressedMixin(_NonCanonicalMixin): ...

class _NonCanonicalCSMixin(_NonCanonicalCompressedMixin):
    def test_getelement(self) -> None: ...
    def test_setitem_sparse(self) -> None: ...
    def test_inv(self) -> None: ...
    def test_solve(self) -> None: ...

class TestCSRNonCanonical(_NonCanonicalCSMixin, TestCSR): ...
class TestCSCNonCanonical(_NonCanonicalCSMixin, TestCSC): ...

class TestBSRNonCanonical(_NonCanonicalCompressedMixin, TestBSR):
    def test_diagonal(self) -> None: ...
    def test_expm(self) -> None: ...

class TestCOONonCanonical(_NonCanonicalMixin, TestCOO):
    def test_setdiag_noncanonical(self) -> None: ...

def cases_64bit() -> Generator[Incomplete, None, None]: ...

class Test64Bit:
    MAT_CLASSES: Incomplete
    def test_decorator_maxval_limit(self) -> None: ...
    def test_decorator_maxval_random(self) -> None: ...
    def test_resiliency_limit_10(self, cls, method_name) -> None: ...
    def test_resiliency_random(self, cls, method_name) -> None: ...
    def test_resiliency_all_32(self, cls, method_name) -> None: ...
    def test_resiliency_all_64(self, cls, method_name) -> None: ...
    def test_no_64(self, cls, method_name) -> None: ...
    def test_downcast_intp(self) -> None: ...
