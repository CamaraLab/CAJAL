from _typeshed import Incomplete
from collections.abc import Generator

def cycle_basis(G, root: Incomplete | None = ...): ...
def simple_cycles(G) -> Generator[Incomplete, None, None]: ...
def recursive_simple_cycles(G): ...
def find_cycle(G, source: Incomplete | None = ..., orientation: Incomplete | None = ...): ...
def minimum_cycle_basis(G, weight: Incomplete | None = ...): ...
