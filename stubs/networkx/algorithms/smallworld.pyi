from _typeshed import Incomplete

def random_reference(G, niter: int = ..., connectivity: bool = ..., seed: Incomplete | None = ...): ...
def lattice_reference(G, niter: int = ..., D: Incomplete | None = ..., connectivity: bool = ..., seed: Incomplete | None = ...): ...
def sigma(G, niter: int = ..., nrand: int = ..., seed: Incomplete | None = ...): ...
def omega(G, niter: int = ..., nrand: int = ..., seed: Incomplete | None = ...): ...
