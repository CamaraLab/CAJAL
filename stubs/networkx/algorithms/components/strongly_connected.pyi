from _typeshed import Incomplete
from collections.abc import Generator

def strongly_connected_components(G) -> Generator[Incomplete, None, None]: ...
def kosaraju_strongly_connected_components(G, source: Incomplete | None = ...) -> Generator[Incomplete, None, None]: ...
def strongly_connected_components_recursive(G) -> None: ...
def number_strongly_connected_components(G): ...
def is_strongly_connected(G): ...
def condensation(G, scc: Incomplete | None = ...): ...
