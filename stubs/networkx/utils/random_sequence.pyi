from _typeshed import Incomplete

def powerlaw_sequence(n, exponent: float = ..., seed: Incomplete | None = ...): ...
def zipf_rv(alpha, xmin: int = ..., seed: Incomplete | None = ...): ...
def cumulative_distribution(distribution): ...
def discrete_sequence(n, distribution: Incomplete | None = ..., cdistribution: Incomplete | None = ..., seed: Incomplete | None = ...): ...
def random_weighted_sample(mapping, k, seed: Incomplete | None = ...): ...
def weighted_choice(mapping, seed: Incomplete | None = ...): ...
