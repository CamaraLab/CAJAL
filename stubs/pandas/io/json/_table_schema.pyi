from _typeshed import Incomplete
from pandas import DataFrame as DataFrame, Series as Series
from pandas._typing import DtypeObj as DtypeObj, JSONSerializable as JSONSerializable
from pandas.core.dtypes.common import is_bool_dtype as is_bool_dtype, is_categorical_dtype as is_categorical_dtype, is_datetime64_dtype as is_datetime64_dtype, is_datetime64tz_dtype as is_datetime64tz_dtype, is_extension_array_dtype as is_extension_array_dtype, is_integer_dtype as is_integer_dtype, is_numeric_dtype as is_numeric_dtype, is_period_dtype as is_period_dtype, is_string_dtype as is_string_dtype, is_timedelta64_dtype as is_timedelta64_dtype
from pandas.core.dtypes.dtypes import CategoricalDtype as CategoricalDtype
from pandas.core.indexes.multi import MultiIndex as MultiIndex
from pandas.util._exceptions import find_stack_level as find_stack_level

loads: Incomplete
TABLE_SCHEMA_VERSION: str

def as_json_table_type(x: DtypeObj) -> str: ...
def set_default_names(data): ...
def convert_pandas_type_to_json_field(arr) -> dict[str, JSONSerializable]: ...
def convert_json_field_to_pandas_type(field) -> Union[str, CategoricalDtype]: ...
def build_table_schema(data: Union[DataFrame, Series], index: bool = ..., primary_key: Union[bool, None] = ..., version: bool = ...) -> dict[str, JSONSerializable]: ...
def parse_table_schema(json, precise_float): ...
