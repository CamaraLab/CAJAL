from _typeshed import Incomplete
from matplotlib.axes import Axes as Axes
from matplotlib.figure import Figure as Figure
from pandas import DataFrame as DataFrame, Index as Index, Series as Series
from pandas.core.dtypes.missing import notna as notna
from pandas.io.formats.printing import pprint_thing as pprint_thing
from pandas.plotting._matplotlib.style import get_standard_colors as get_standard_colors
from pandas.plotting._matplotlib.tools import create_subplots as create_subplots, do_adjust_figure as do_adjust_figure, maybe_adjust_figure as maybe_adjust_figure, set_ticks_props as set_ticks_props

def scatter_matrix(frame: DataFrame, alpha: float = ..., figsize: Incomplete | None = ..., ax: Incomplete | None = ..., grid: bool = ..., diagonal: str = ..., marker: str = ..., density_kwds: Incomplete | None = ..., hist_kwds: Incomplete | None = ..., range_padding: float = ..., **kwds): ...
def radviz(frame: DataFrame, class_column, ax: Union[Axes, None] = ..., color: Incomplete | None = ..., colormap: Incomplete | None = ..., **kwds) -> Axes: ...
def andrews_curves(frame: DataFrame, class_column, ax: Union[Axes, None] = ..., samples: int = ..., color: Incomplete | None = ..., colormap: Incomplete | None = ..., **kwds) -> Axes: ...
def bootstrap_plot(series: Series, fig: Union[Figure, None] = ..., size: int = ..., samples: int = ..., **kwds) -> Figure: ...
def parallel_coordinates(frame: DataFrame, class_column, cols: Incomplete | None = ..., ax: Union[Axes, None] = ..., color: Incomplete | None = ..., use_columns: bool = ..., xticks: Incomplete | None = ..., colormap: Incomplete | None = ..., axvlines: bool = ..., axvlines_kwds: Incomplete | None = ..., sort_labels: bool = ..., **kwds) -> Axes: ...
def lag_plot(series: Series, lag: int = ..., ax: Union[Axes, None] = ..., **kwds) -> Axes: ...
def autocorrelation_plot(series: Series, ax: Union[Axes, None] = ..., **kwds) -> Axes: ...
def unpack_single_str_list(keys): ...
