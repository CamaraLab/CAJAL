[build-system]
# Minimum requirements for the build system to execute
requires = [
	 "setuptools >= 70",
	 "pip>=24",
	 "wheel",
	 "Cython>=3",
	 "numpy",
         "futhark-ffi >= 0.15"
]
# What should the build-backend be?
build-backend = "setuptools.build_meta"

[project]
name = "cajal"
version = "1.5"
description="A library for multi-modal cell morphology analyses using Gromov-Wasserstein (GW) distance."
readme="./README.md"
requires-python=">=3.9"


authors= [ { name="Pablo CÃ¡mara", email='pcamara@pennmedicine.upenn.edu' } ]
classifiers=[
	'License :: OSI Approved :: MIT License',
        'Programming Language :: Python :: 3',
        'Framework :: Jupyter',
        'Topic :: Scientific/Engineering :: Bio-Informatics'
    ]

dependencies = [
	"igraph",
        "leidenalg",
        "numpy",
	"cython >= 3",
        "pathos >= 0.3.2",
        "futhark-ffi >= 0.15",
	"tqdm>=4.64.1",
        "potpourri3d",
	"pynndescent>=0.5.13",
        "navis>=1.9.0",
        "python-louvain",
        "pot",
	"pillow>=11.0",
        "scipy>=1.10",
        "scikit-image",
        "tifffile",
        "trimesh",
	"mpltern>=1.0.0",
	"scikit-dimension"
	]

[project.optional-dependencies]
dev = [
    "mypy>=0.991",
    "pytest >= 7.2.1",
    "pre-commit >= 2.20.0",
    "myst_parser",
    "plotly",
    "nbsphinx",
    "navis",
    "black",
    "flake8",
    "ipywidgets",
    "sphinx_rtd_theme"
]

doc = [
    "sphinx",
    "myst_parser",
    "nbsphinx",
    "sphinx_rtd_theme",
    "pandas",
    "plotly"
]

vis = [
    "networkx>=3",
    "ipywidgets",
    "navis",
    "mpltern",
    "plotly"
]

notebooks = [
    "networkx>=3",
    "ipywidgets",
    "navis",
    "numba",
    "mpltern",
    "plotly",
    "umap-learn",
    "scanpy"
]

[project.license]
file="./LICENSE.md"

[project.urls]
git-repo="https://github.com/CamaraLab/CAJAL"
readthedocs="https://cajal.readthedocs.io/en/latest/"
biorxiv="https://www.biorxiv.org/content/10.1101/2022.05.19.492525v2"

[tool.black]
force-exclude = '''
/(
   \.git
 | \.mypy_cache
 | _build
 | build
 | dist
 | stubs
 | pyproject.toml
 | \.pre-commit-config.yaml
)/
'''

[tool.codespell]
# Ref: https://github.com/codespell-project/codespell#using-a-config-file
skip = '.git*,*.css,pyproject.toml,data,swc,*.swc,obj,*.obj,*.pyi,*.c'
check-hidden = true
# embedded images into jupyter notebooks, acronyms and names starting with capital letter
ignore-regex = '(^\s*"image/\S+": ".*|\b([A-Z][a-zA-Z]+|scl/fo/|ser: Series|ot\.lp|networkx\.algorithms\.mis)\b)'
ignore-words-list = 'coo,ot,thi,nd'
