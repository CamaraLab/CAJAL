from networkx.utils import arbitrary_element as arbitrary_element, edges_equal as edges_equal, nodes_equal as nodes_equal

class TestQuotient:
    def test_quotient_graph_complete_multipartite(self): ...
    def test_quotient_graph_complete_bipartite(self): ...
    def test_quotient_graph_edge_relation(self): ...
    def test_condensation_as_quotient(self): ...
    def test_path(self) -> None: ...
    def test_path__partition_provided_as_dict_of_lists(self) -> None: ...
    def test_path__partition_provided_as_dict_of_tuples(self) -> None: ...
    def test_path__partition_provided_as_dict_of_sets(self) -> None: ...
    def test_multigraph_path(self) -> None: ...
    def test_directed_path(self) -> None: ...
    def test_directed_multigraph_path(self) -> None: ...
    def test_overlapping_blocks(self) -> None: ...
    def test_weighted_path(self) -> None: ...
    def test_barbell(self) -> None: ...
    def test_barbell_plus(self) -> None: ...
    def test_blockmodel(self) -> None: ...
    def test_multigraph_blockmodel(self) -> None: ...
    def test_quotient_graph_incomplete_partition(self) -> None: ...

class TestContraction:
    def test_undirected_node_contraction(self) -> None: ...
    def test_directed_node_contraction(self) -> None: ...
    def test_undirected_node_contraction_no_copy(self) -> None: ...
    def test_directed_node_contraction_no_copy(self) -> None: ...
    def test_create_multigraph(self) -> None: ...
    def test_multigraph_keys(self) -> None: ...
    def test_node_attributes(self) -> None: ...
    def test_edge_attributes(self) -> None: ...
    def test_without_self_loops(self) -> None: ...
    def test_contract_selfloop_graph(self) -> None: ...
    def test_undirected_edge_contraction(self) -> None: ...
    def test_multigraph_edge_contraction(self) -> None: ...
    def test_nonexistent_edge(self) -> None: ...
