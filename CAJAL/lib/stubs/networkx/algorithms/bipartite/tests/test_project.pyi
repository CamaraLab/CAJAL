from networkx.algorithms import bipartite as bipartite
from networkx.utils import edges_equal as edges_equal, nodes_equal as nodes_equal

class TestBipartiteProject:
    def test_path_projected_graph(self) -> None: ...
    def test_path_projected_properties_graph(self) -> None: ...
    def test_path_collaboration_projected_graph(self) -> None: ...
    def test_directed_path_collaboration_projected_graph(self) -> None: ...
    def test_path_weighted_projected_graph(self) -> None: ...
    def test_path_weighted_projected_directed_graph(self) -> None: ...
    def test_star_projected_graph(self) -> None: ...
    def test_project_multigraph(self) -> None: ...
    def test_project_collaboration(self) -> None: ...
    def test_directed_projection(self) -> None: ...

class TestBipartiteWeightedProjection:
    @classmethod
    def setup_class(cls) -> None: ...
    def test_project_weighted_shared(self) -> None: ...
    def test_project_weighted_newman(self) -> None: ...
    def test_project_weighted_ratio(self) -> None: ...
    def test_project_weighted_overlap(self) -> None: ...
    def test_project_weighted_jaccard(self) -> None: ...
    def test_generic_weighted_projected_graph_simple(self): ...
    def test_generic_weighted_projected_graph_custom(self): ...
