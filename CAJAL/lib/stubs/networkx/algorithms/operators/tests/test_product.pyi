from networkx.utils import edges_equal as edges_equal

def test_tensor_product_raises() -> None: ...
def test_tensor_product_null() -> None: ...
def test_tensor_product_size() -> None: ...
def test_tensor_product_combinations() -> None: ...
def test_tensor_product_classic_result() -> None: ...
def test_tensor_product_random() -> None: ...
def test_cartesian_product_multigraph() -> None: ...
def test_cartesian_product_raises() -> None: ...
def test_cartesian_product_null() -> None: ...
def test_cartesian_product_size() -> None: ...
def test_cartesian_product_classic() -> None: ...
def test_cartesian_product_random() -> None: ...
def test_lexicographic_product_raises() -> None: ...
def test_lexicographic_product_null() -> None: ...
def test_lexicographic_product_size() -> None: ...
def test_lexicographic_product_combinations() -> None: ...
def test_lexicographic_product_random() -> None: ...
def test_strong_product_raises() -> None: ...
def test_strong_product_null() -> None: ...
def test_strong_product_size() -> None: ...
def test_strong_product_combinations() -> None: ...
def test_strong_product_random() -> None: ...
def test_graph_power_raises() -> None: ...
def test_graph_power() -> None: ...
def test_graph_power_negative() -> None: ...
def test_rooted_product_raises() -> None: ...
def test_rooted_product() -> None: ...
