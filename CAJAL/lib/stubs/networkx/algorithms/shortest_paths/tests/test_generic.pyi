def validate_grid_path(r, c, s, t, p) -> None: ...

class TestGenericPath:
    @classmethod
    def setup_class(cls) -> None: ...
    def test_shortest_path(self) -> None: ...
    def test_shortest_path_target(self) -> None: ...
    def test_shortest_path_length(self) -> None: ...
    def test_shortest_path_length_target(self) -> None: ...
    def test_single_source_shortest_path(self) -> None: ...
    def test_single_source_shortest_path_length(self) -> None: ...
    def test_all_pairs_shortest_path(self) -> None: ...
    def test_all_pairs_shortest_path_length(self) -> None: ...
    def test_has_path(self) -> None: ...
    def test_all_shortest_paths(self) -> None: ...
    def test_all_shortest_paths_raise(self) -> None: ...
    def test_bad_method(self) -> None: ...
    def test_all_shortest_paths_zero_weight_edge(self) -> None: ...

class TestAverageShortestPathLength:
    def test_cycle_graph(self) -> None: ...
    def test_path_graph(self) -> None: ...
    def test_weighted(self) -> None: ...
    def test_specified_methods(self) -> None: ...
    def test_disconnected(self) -> None: ...
    def test_trivial_graph(self) -> None: ...
    def test_null_graph(self) -> None: ...
    def test_bad_method(self) -> None: ...

class TestAverageShortestPathLengthNumpy:
    @classmethod
    def setup_class(cls) -> None: ...
    def test_specified_methods_numpy(self) -> None: ...
