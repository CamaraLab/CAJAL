from _typeshed import Incomplete
from networkx.algorithms.similarity import graph_edit_distance as graph_edit_distance, optimal_edit_paths as optimal_edit_paths, optimize_graph_edit_distance as optimize_graph_edit_distance
from networkx.generators.classic import circular_ladder_graph as circular_ladder_graph, cycle_graph as cycle_graph, path_graph as path_graph, wheel_graph as wheel_graph

def nmatch(n1, n2): ...
def ematch(e1, e2): ...
def getCanonical(): ...

class TestSimilarity:
    @classmethod
    def setup_class(cls) -> None: ...
    def test_graph_edit_distance_roots_and_timeout(self) -> None: ...
    def test_graph_edit_distance(self) -> None: ...
    def test_graph_edit_distance_node_match(self): ...
    def test_graph_edit_distance_edge_match(self): ...
    def test_graph_edit_distance_node_cost(self): ...
    def test_graph_edit_distance_edge_cost(self): ...
    def test_graph_edit_distance_upper_bound(self) -> None: ...
    def test_optimal_edit_paths(self): ...
    def test_optimize_graph_edit_distance(self) -> None: ...
    def test_selfloops(self) -> None: ...
    def test_digraph(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_multidigraph(self) -> None: ...
    def testCopy(self) -> None: ...
    def testSame(self) -> None: ...
    def testOneEdgeLabelDiff(self) -> None: ...
    def testOneNodeLabelDiff(self) -> None: ...
    def testOneExtraNode(self) -> None: ...
    def testOneExtraEdge(self) -> None: ...
    def testOneExtraNodeAndEdge(self) -> None: ...
    def testGraph1(self) -> None: ...
    def testGraph2(self) -> None: ...
    def testGraph3(self) -> None: ...
    def testGraph4(self) -> None: ...
    def testGraph4_a(self) -> None: ...
    def testGraph4_b(self) -> None: ...
    simrank_algs: Incomplete
    def test_simrank_no_source_no_target(self, simrank_similarity) -> None: ...
    def test_simrank_source_no_target(self, simrank_similarity) -> None: ...
    def test_simrank_noninteger_nodes(self, simrank_similarity) -> None: ...
    def test_simrank_source_and_target(self, simrank_similarity) -> None: ...
    def test_simrank_max_iterations(self, alg) -> None: ...
    def test_simrank_between_versions(self) -> None: ...
    def test_simrank_numpy_no_source_no_target(self) -> None: ...
    def test_simrank_numpy_source_no_target(self) -> None: ...
    def test_simrank_numpy_source_and_target(self) -> None: ...
    def test_panther_similarity_unweighted(self) -> None: ...
    def test_panther_similarity_weighted(self) -> None: ...
    def test_generate_random_paths_unweighted(self) -> None: ...
    def test_generate_random_paths_weighted(self) -> None: ...
    def test_symmetry_with_custom_matching(self): ...
