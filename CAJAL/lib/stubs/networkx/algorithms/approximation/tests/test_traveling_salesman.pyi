import networkx as nx
from _typeshed import Incomplete

pairwise = nx.utils.pairwise

def test_christofides_hamiltonian() -> None: ...
def test_christofides_incomplete_graph() -> None: ...
def test_christofides_ignore_selfloops() -> None: ...

class TestBase:
    @classmethod
    def setup_class(cls) -> None: ...

def validate_solution(soln, cost, exp_soln, exp_cost) -> None: ...
def validate_symmetric_solution(soln, cost, exp_soln, exp_cost) -> None: ...

class TestGreedyTSP(TestBase):
    def test_greedy(self) -> None: ...
    def test_not_complete_graph(self) -> None: ...
    def test_not_weighted_graph(self) -> None: ...
    def test_two_nodes(self) -> None: ...
    def test_ignore_selfloops(self) -> None: ...

class TestSimulatedAnnealingTSP(TestBase):
    tsp: Incomplete
    def test_simulated_annealing_directed(self) -> None: ...
    def test_simulated_annealing_undirected(self) -> None: ...
    def test_error_on_input_order_mistake(self) -> None: ...
    def test_not_complete_graph(self) -> None: ...
    def test_ignore_selfloops(self) -> None: ...
    def test_not_weighted_graph(self) -> None: ...
    def test_two_nodes(self) -> None: ...
    def test_failure_of_costs_too_high_when_iterations_low(self) -> None: ...

class TestThresholdAcceptingTSP(TestSimulatedAnnealingTSP):
    tsp: Incomplete
    def test_failure_of_costs_too_high_when_iterations_low(self) -> None: ...

def test_TSP_method(): ...
def test_TSP_unweighted() -> None: ...
def test_TSP_weighted(): ...
def test_TSP_incomplete_graph_short_path() -> None: ...
def test_held_karp_ascent() -> None: ...
def test_ascent_fractional_solution() -> None: ...
def test_ascent_method_asymmetric() -> None: ...
def test_ascent_method_asymmetric_2() -> None: ...
def test_held_karp_ascent_asymmetric_3() -> None: ...
def test_held_karp_ascent_fractional_asymmetric() -> None: ...
def test_spanning_tree_distribution() -> None: ...
def test_asadpour_tsp(): ...
def test_asadpour_real_world(): ...
def test_asadpour_real_world_path(): ...
def test_asadpour_disconnected_graph() -> None: ...
def test_asadpour_incomplete_graph() -> None: ...
def test_asadpour_empty_graph() -> None: ...
def test_asadpour_integral_held_karp() -> None: ...
def test_directed_tsp_impossible() -> None: ...
