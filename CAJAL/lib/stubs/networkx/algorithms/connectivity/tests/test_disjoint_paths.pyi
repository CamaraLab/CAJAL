from _typeshed import Incomplete
from networkx.algorithms import flow as flow
from networkx.utils import pairwise as pairwise

flow_funcs: Incomplete

def is_path(G, path): ...
def are_edge_disjoint_paths(G, paths): ...
def are_node_disjoint_paths(G, paths): ...
def test_graph_from_pr_2053() -> None: ...
def test_florentine_families() -> None: ...
def test_karate() -> None: ...
def test_petersen_disjoint_paths() -> None: ...
def test_octahedral_disjoint_paths() -> None: ...
def test_icosahedral_disjoint_paths() -> None: ...
def test_cutoff_disjoint_paths() -> None: ...
def test_missing_source_edge_paths() -> None: ...
def test_missing_source_node_paths() -> None: ...
def test_missing_target_edge_paths() -> None: ...
def test_missing_target_node_paths() -> None: ...
def test_not_weakly_connected_edges() -> None: ...
def test_not_weakly_connected_nodes() -> None: ...
def test_not_connected_edges() -> None: ...
def test_not_connected_nodes() -> None: ...
def test_isolated_edges() -> None: ...
def test_isolated_nodes() -> None: ...
def test_invalid_auxiliary() -> None: ...
