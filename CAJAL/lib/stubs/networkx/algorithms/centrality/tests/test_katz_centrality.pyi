class TestKatzCentrality:
    def test_K5(self) -> None: ...
    def test_P3(self) -> None: ...
    def test_maxiter(self) -> None: ...
    def test_beta_as_scalar(self) -> None: ...
    def test_beta_as_dict(self) -> None: ...
    def test_multiple_alpha(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_empty(self) -> None: ...
    def test_bad_beta(self) -> None: ...
    def test_bad_beta_numbe(self) -> None: ...

class TestKatzCentralityNumpy:
    @classmethod
    def setup_class(cls) -> None: ...
    def test_K5(self) -> None: ...
    def test_P3(self) -> None: ...
    def test_beta_as_scalar(self) -> None: ...
    def test_beta_as_dict(self) -> None: ...
    def test_multiple_alpha(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_empty(self) -> None: ...
    def test_bad_beta(self) -> None: ...
    def test_bad_beta_numbe(self) -> None: ...
    def test_K5_unweighted(self) -> None: ...
    def test_P3_unweighted(self) -> None: ...

class TestKatzCentralityDirected:
    @classmethod
    def setup_class(cls) -> None: ...
    def test_katz_centrality_weighted(self) -> None: ...
    def test_katz_centrality_unweighted(self) -> None: ...

class TestKatzCentralityDirectedNumpy(TestKatzCentralityDirected):
    @classmethod
    def setup_class(cls) -> None: ...
    def test_katz_centrality_weighted(self) -> None: ...
    def test_katz_centrality_unweighted(self) -> None: ...

class TestKatzEigenvectorVKatz:
    @classmethod
    def setup_class(cls) -> None: ...
    def test_eigenvector_v_katz_random(self) -> None: ...
