import networkx as nx
from .test_graph import BaseAttrGraphTester as BaseAttrGraphTester, TestGraph as _TestGraph
from _typeshed import Incomplete
from collections import UserDict
from networkx.utils import edges_equal as edges_equal

class BaseMultiGraphTester(BaseAttrGraphTester):
    def test_has_edge(self) -> None: ...
    def test_get_edge_data(self) -> None: ...
    def test_adjacency(self) -> None: ...
    def deepcopy_edge_attr(self, H, G) -> None: ...
    def shallow_copy_edge_attr(self, H, G) -> None: ...
    def graphs_equal(self, H, G) -> None: ...
    def same_attrdict(self, H, G) -> None: ...
    def different_attrdict(self, H, G) -> None: ...
    def test_to_undirected(self) -> None: ...
    def test_to_directed(self) -> None: ...
    def test_number_of_edges_selfloops(self) -> None: ...
    def test_edge_lookup(self) -> None: ...
    def test_edge_attr(self) -> None: ...
    def test_edge_attr4(self) -> None: ...

class TestMultiGraph(BaseMultiGraphTester, _TestGraph):
    Graph: Incomplete
    k3adj: Incomplete
    k3edges: Incomplete
    k3nodes: Incomplete
    K3: Incomplete
    def setup_method(self) -> None: ...
    def test_data_input(self) -> None: ...
    def test_data_multigraph_input(self) -> None: ...
    etraits: Incomplete
    egraphics: Incomplete
    edata: Incomplete
    dodod1: Incomplete
    dodod2: Incomplete
    dodod3: Incomplete
    dol: Incomplete
    multiple_edge: Incomplete
    single_edge: Incomplete
    single_edge1: Incomplete
    single_edge2: Incomplete
    single_edge3: Incomplete
    cases: Incomplete
    def test_non_multigraph_input(self, dod, mgi, edges) -> None: ...
    mgi_none_cases: Incomplete
    def test_non_multigraph_input_mgi_none(self, dod, edges) -> None: ...
    raise_cases: Incomplete
    def test_non_multigraph_input_raise(self, dod) -> None: ...
    def test_getitem(self) -> None: ...
    def test_remove_node(self) -> None: ...
    def test_add_edge(self) -> None: ...
    def test_add_edge_conflicting_key(self) -> None: ...
    def test_add_edges_from(self) -> None: ...
    def test_multigraph_add_edges_from_four_tuple_misordered(self) -> None: ...
    def test_remove_edge(self) -> None: ...
    def test_remove_edges_from(self) -> None: ...
    def test_remove_multiedge(self) -> None: ...

class TestEdgeSubgraph:
    G: Incomplete
    H: Incomplete
    def setup_method(self) -> None: ...
    def test_correct_nodes(self) -> None: ...
    def test_correct_edges(self) -> None: ...
    def test_add_node(self) -> None: ...
    def test_remove_node(self) -> None: ...
    def test_node_attr_dict(self) -> None: ...
    def test_edge_attr_dict(self) -> None: ...
    def test_graph_attr_dict(self) -> None: ...

class CustomDictClass(UserDict): ...

class MultiGraphSubClass(nx.MultiGraph):
    node_dict_factory: Incomplete
    node_attr_dict_factory: Incomplete
    adjlist_outer_dict_factory: Incomplete
    adjlist_inner_dict_factory: Incomplete
    edge_key_dict_factory: Incomplete
    edge_attr_dict_factory: Incomplete
    graph_attr_dict_factory: Incomplete

class TestMultiGraphSubclass(TestMultiGraph):
    Graph: Incomplete
    k3edges: Incomplete
    k3nodes: Incomplete
    K3: Incomplete
    def setup_method(self) -> None: ...
