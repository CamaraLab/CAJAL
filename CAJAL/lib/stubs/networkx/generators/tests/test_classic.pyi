from networkx.algorithms.isomorphism.isomorph import graph_could_be_isomorphic as graph_could_be_isomorphic
from networkx.utils import edges_equal as edges_equal, nodes_equal as nodes_equal

is_isomorphic = graph_could_be_isomorphic

class TestGeneratorClassic:
    def test_balanced_tree(self) -> None: ...
    def test_balanced_tree_star(self) -> None: ...
    def test_balanced_tree_path(self) -> None: ...
    def test_full_rary_tree(self) -> None: ...
    def test_full_rary_tree_balanced(self) -> None: ...
    def test_full_rary_tree_path(self) -> None: ...
    def test_full_rary_tree_empty(self) -> None: ...
    def test_full_rary_tree_3_20(self) -> None: ...
    def test_barbell_graph(self) -> None: ...
    def test_binomial_tree(self) -> None: ...
    def test_complete_graph(self) -> None: ...
    def test_complete_digraph(self) -> None: ...
    def test_circular_ladder_graph(self) -> None: ...
    def test_circulant_graph(self) -> None: ...
    def test_cycle_graph(self) -> None: ...
    def test_dorogovtsev_goltsev_mendes_graph(self) -> None: ...
    def test_create_using(self) -> None: ...
    def test_empty_graph(self) -> None: ...
    def test_ladder_graph(self) -> None: ...
    def test_lollipop_graph_right_sizes(self) -> None: ...
    def test_lollipop_graph_exceptions(self) -> None: ...
    def test_lollipop_graph_same_as_path_when_m1_is_2(self) -> None: ...
    def test_lollipop_graph_for_multigraph(self) -> None: ...
    def test_lollipop_graph_mixing_input_types(self) -> None: ...
    def test_lollipop_graph_not_int_integer_inputs(self) -> None: ...
    def test_null_graph(self) -> None: ...
    def test_path_graph(self) -> None: ...
    def test_star_graph(self) -> None: ...
    def test_non_int_integers_for_star_graph(self) -> None: ...
    def test_trivial_graph(self) -> None: ...
    def test_turan_graph(self) -> None: ...
    def test_wheel_graph(self) -> None: ...
    def test_non_int_integers_for_wheel_graph(self) -> None: ...
    def test_complete_0_partite_graph(self) -> None: ...
    def test_complete_1_partite_graph(self) -> None: ...
    def test_complete_2_partite_graph(self) -> None: ...
    def test_complete_multipartite_graph(self) -> None: ...
