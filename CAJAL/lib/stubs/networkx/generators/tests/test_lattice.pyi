from networkx.utils import edges_equal as edges_equal

class TestGrid2DGraph:
    def test_number_of_vertices(self) -> None: ...
    def test_degree_distribution(self) -> None: ...
    def test_directed(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_periodic(self) -> None: ...
    def test_periodic_iterable(self) -> None: ...
    def test_periodic_directed(self) -> None: ...
    def test_periodic_multigraph(self) -> None: ...
    def test_exceptions(self) -> None: ...
    def test_node_input(self) -> None: ...

class TestGridGraph:
    def test_grid_graph(self) -> None: ...
    def test_node_input(self) -> None: ...
    def test_periodic_iterable(self) -> None: ...

class TestHypercubeGraph:
    def test_special_cases(self) -> None: ...
    def test_degree_distribution(self) -> None: ...

class TestTriangularLatticeGraph:
    def test_lattice_points(self) -> None: ...
    def test_directed(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_periodic(self) -> None: ...

class TestHexagonalLatticeGraph:
    def test_lattice_points(self) -> None: ...
    def test_directed(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_periodic(self) -> None: ...
