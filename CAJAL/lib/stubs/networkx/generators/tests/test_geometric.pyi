def l1dist(x, y): ...

class TestRandomGeometricGraph:
    def test_number_of_nodes(self) -> None: ...
    def test_distances(self) -> None: ...
    def test_p(self) -> None: ...
    def test_node_names(self) -> None: ...

class TestSoftRandomGeometricGraph:
    def test_number_of_nodes(self) -> None: ...
    def test_distances(self) -> None: ...
    def test_p(self): ...
    def test_node_names(self) -> None: ...
    def test_p_dist_default(self) -> None: ...
    def test_p_dist_zero(self): ...

def join(G, u, v, theta, alpha, metric): ...

class TestGeographicalThresholdGraph:
    def test_number_of_nodes(self) -> None: ...
    def test_distances(self) -> None: ...
    def test_metric(self) -> None: ...
    def test_p_dist_zero(self): ...

class TestWaxmanGraph:
    def test_number_of_nodes_1(self) -> None: ...
    def test_number_of_nodes_2(self) -> None: ...
    def test_metric(self) -> None: ...

class TestNavigableSmallWorldGraph:
    def test_navigable_small_world(self) -> None: ...

class TestThresholdedRandomGeometricGraph:
    def test_number_of_nodes(self) -> None: ...
    def test_distances(self) -> None: ...
    def test_p(self): ...
    def test_node_names(self) -> None: ...
    def test_theta(self) -> None: ...

def test_geometric_edges_raises_no_pos() -> None: ...
