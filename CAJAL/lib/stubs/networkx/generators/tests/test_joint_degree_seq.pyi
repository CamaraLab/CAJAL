from networkx.algorithms.assortativity import degree_mixing_dict as degree_mixing_dict
from networkx.generators import gnm_random_graph as gnm_random_graph, powerlaw_cluster_graph as powerlaw_cluster_graph
from networkx.generators.joint_degree_seq import directed_joint_degree_graph as directed_joint_degree_graph, is_valid_directed_joint_degree as is_valid_directed_joint_degree, is_valid_joint_degree as is_valid_joint_degree, joint_degree_graph as joint_degree_graph

def test_is_valid_joint_degree() -> None: ...
def test_joint_degree_graph(ntimes: int = ...) -> None: ...
def test_is_valid_directed_joint_degree() -> None: ...
def test_directed_joint_degree_graph(n: int = ..., m: int = ..., ntimes: int = ...) -> None: ...
