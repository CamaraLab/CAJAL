from networkx.utils import edges_equal as edges_equal

class TestGeneratorLine:
    def test_star(self) -> None: ...
    def test_path(self) -> None: ...
    def test_cycle(self) -> None: ...
    def test_digraph1(self) -> None: ...
    def test_multigraph1(self) -> None: ...
    def test_multigraph2(self) -> None: ...
    def test_multidigraph1(self) -> None: ...
    def test_multidigraph2(self) -> None: ...
    def test_digraph2(self) -> None: ...
    def test_create1(self) -> None: ...
    def test_create2(self) -> None: ...

class TestGeneratorInverseLine:
    def test_example(self) -> None: ...
    def test_example_2(self) -> None: ...
    def test_pair(self) -> None: ...
    def test_line(self) -> None: ...
    def test_triangle_graph(self) -> None: ...
    def test_cycle(self) -> None: ...
    def test_empty(self) -> None: ...
    def test_K1(self) -> None: ...
    def test_claw(self) -> None: ...
    def test_non_line_graph(self) -> None: ...
    def test_wrong_graph_type(self) -> None: ...
    def test_line_inverse_line_complete(self) -> None: ...
    def test_line_inverse_line_path(self) -> None: ...
    def test_line_inverse_line_hypercube(self) -> None: ...
    def test_line_inverse_line_cycle(self) -> None: ...
    def test_line_inverse_line_star(self) -> None: ...
    def test_line_inverse_line_multipartite(self) -> None: ...
    def test_line_inverse_line_dgm(self) -> None: ...
    def test_line_different_node_types(self) -> None: ...
