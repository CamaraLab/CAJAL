from networkx.convert import from_dict_of_dicts as from_dict_of_dicts, from_dict_of_lists as from_dict_of_lists, to_dict_of_dicts as to_dict_of_dicts, to_dict_of_lists as to_dict_of_lists, to_networkx_graph as to_networkx_graph
from networkx.generators.classic import barbell_graph as barbell_graph, cycle_graph as cycle_graph
from networkx.utils import edges_equal as edges_equal, graphs_equal as graphs_equal, nodes_equal as nodes_equal

class TestConvert:
    def edgelists_equal(self, e1, e2): ...
    def test_simple_graphs(self) -> None: ...
    def test_exceptions(self) -> None: ...
    def test_digraphs(self) -> None: ...
    def test_graph(self) -> None: ...
    def test_with_multiedges_self_loops(self) -> None: ...
    def test_edgelists(self) -> None: ...
    def test_directed_to_undirected(self) -> None: ...
    def test_attribute_dict_integrity(self) -> None: ...
    def test_to_edgelist(self) -> None: ...
    def test_custom_node_attr_dict_safekeeping(self) -> None: ...

def test_to_dict_of_dicts_with_edgedata_param(edgelist) -> None: ...
def test_to_dict_of_dicts_with_edgedata_and_nodelist() -> None: ...
def test_to_dict_of_dicts_with_edgedata_multigraph() -> None: ...
def test_to_networkx_graph_non_edgelist() -> None: ...
