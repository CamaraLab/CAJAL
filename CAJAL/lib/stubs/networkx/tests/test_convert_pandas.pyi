from _typeshed import Incomplete
from networkx.utils import edges_equal as edges_equal, graphs_equal as graphs_equal, nodes_equal as nodes_equal

np: Incomplete
pd: Incomplete

class TestConvertPandas:
    rng: Incomplete
    df: Incomplete
    mdf: Incomplete
    def setup_method(self) -> None: ...
    def test_exceptions(self) -> None: ...
    def test_from_edgelist_all_attr(self) -> None: ...
    def test_from_edgelist_multi_attr(self) -> None: ...
    def test_from_edgelist_multi_attr_incl_target(self) -> None: ...
    def test_from_edgelist_multidigraph_and_edge_attr(self) -> None: ...
    def test_from_edgelist_one_attr(self) -> None: ...
    def test_from_edgelist_int_attr_name(self) -> None: ...
    def test_from_edgelist_invalid_attr(self) -> None: ...
    def test_from_edgelist_no_attr(self) -> None: ...
    def test_from_edgelist(self) -> None: ...
    def test_to_edgelist_default_source_or_target_col_exists(self) -> None: ...
    def test_to_edgelist_custom_source_or_target_col_exists(self) -> None: ...
    def test_to_edgelist_edge_key_col_exists(self) -> None: ...
    def test_from_adjacency(self) -> None: ...
    def test_roundtrip(self, graph) -> None: ...
    def test_from_adjacency_named(self) -> None: ...
    def test_edgekey_with_multigraph(self) -> None: ...
    def test_edgekey_with_normal_graph_no_action(self) -> None: ...
    def test_nonexisting_edgekey_raises(self) -> None: ...

def test_to_pandas_adjacency_with_nodelist() -> None: ...
def test_to_pandas_edgelist_with_nodelist() -> None: ...
