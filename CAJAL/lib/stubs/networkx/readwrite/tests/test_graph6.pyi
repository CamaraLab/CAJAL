from networkx.utils import edges_equal as edges_equal, nodes_equal as nodes_equal

class TestGraph6Utils:
    def test_n_data_n_conversion(self) -> None: ...

class TestFromGraph6Bytes:
    def test_from_graph6_bytes(self) -> None: ...
    def test_read_equals_from_bytes(self) -> None: ...

class TestReadGraph6:
    def test_read_many_graph6(self) -> None: ...

class TestWriteGraph6:
    def test_null_graph(self) -> None: ...
    def test_trivial_graph(self) -> None: ...
    def test_complete_graph(self) -> None: ...
    def test_large_complete_graph(self) -> None: ...
    def test_no_header(self) -> None: ...
    def test_complete_bipartite_graph(self) -> None: ...
    def test_no_directed_or_multi_graphs(self, G) -> None: ...
    def test_length(self) -> None: ...
    def test_roundtrip(self) -> None: ...
    def test_write_path(self) -> None: ...
    def test_relabeling(self, edge) -> None: ...

class TestToGraph6Bytes:
    def test_null_graph(self) -> None: ...
    def test_trivial_graph(self) -> None: ...
    def test_complete_graph(self) -> None: ...
    def test_large_complete_graph(self) -> None: ...
    def test_no_header(self) -> None: ...
    def test_complete_bipartite_graph(self) -> None: ...
    def test_no_directed_or_multi_graphs(self, G) -> None: ...
    def test_length(self) -> None: ...
    def test_roundtrip(self) -> None: ...
    def test_relabeling(self, edge) -> None: ...
