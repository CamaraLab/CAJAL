from _typeshed import Incomplete
from networkx.utils import edges_equal as edges_equal, graphs_equal as graphs_equal, nodes_equal as nodes_equal

pygraphviz: Incomplete

class TestAGraph:
    def build_graph(self, G): ...
    def assert_equal(self, G1, G2) -> None: ...
    def agraph_checks(self, G) -> None: ...
    def test_from_agraph_name(self) -> None: ...
    def test_from_agraph_create_using(self, graph_class) -> None: ...
    def test_from_agraph_named_edges(self) -> None: ...
    def test_undirected(self) -> None: ...
    def test_directed(self) -> None: ...
    def test_multi_undirected(self) -> None: ...
    def test_multi_directed(self) -> None: ...
    def test_to_agraph_with_nodedata(self) -> None: ...
    def test_to_agraph_with_edgedata(self, graph_class) -> None: ...
    def test_view_pygraphviz_path(self, tmp_path) -> None: ...
    def test_view_pygraphviz_file_suffix(self, tmp_path) -> None: ...
    def test_view_pygraphviz(self) -> None: ...
    def test_view_pygraphviz_edgelabel(self) -> None: ...
    def test_view_pygraphviz_callable_edgelabel(self): ...
    def test_view_pygraphviz_multigraph_edgelabels(self) -> None: ...
    def test_graph_with_reserved_keywords(self) -> None: ...
    def test_view_pygraphviz_no_added_attrs_to_input(self) -> None: ...
    def test_view_pygraphviz_leaves_input_graph_unmodified(self) -> None: ...
    def test_graph_with_AGraph_attrs(self) -> None: ...
    def test_round_trip_empty_graph(self) -> None: ...
    def test_round_trip_integer_nodes(self) -> None: ...
    def test_graphviz_alias(self) -> None: ...
    def test_pygraphviz_layout_root(self, root) -> None: ...
    def test_2d_layout(self) -> None: ...
    def test_3d_layout(self) -> None: ...
